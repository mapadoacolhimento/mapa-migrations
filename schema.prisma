generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["match", "public", "mobilization"]
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
  @@schema("public")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
  volunteers_formdata        volunteers_formdata?

  @@index([username], map: "auth_user_username_6821ab7c_like")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
  @@schema("public")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
  @@schema("public")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)

  @@schema("public")
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
  @@schema("public")
}

model integrations_logs {
  id          BigInt   @id(map: "volunteers_integrationlogs_pkey") @default(autoincrement())
  type        String   @db.VarChar(30)
  created_at  DateTime @db.Timestamptz(6)
  status      String   @db.VarChar(30)
  error       String
  data        Json
  integration String   @db.VarChar(15)
  external_id Int?
  form_type   String   @db.VarChar(15)
  internal_id Int?

  @@schema("public")
}

model msrs_formdata {
  id         BigInt   @id @default(autoincrement())
  stage      String   @db.VarChar(20)
  values     Json
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)

  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model Volunteers {
  id                       Int                      @id(map: "volunteers_volunteer_pkey") @default(autoincrement())
  created_at               DateTime                 @db.Timestamptz(6)
  updated_at               DateTime                 @db.Timestamptz(6)
  condition                String                   @db.VarChar(30)
  firstName                String                   @map("first_name") @db.VarChar(200)
  last_name                String                   @db.VarChar(200)
  email                    String                   @unique @db.VarChar(254)
  phone                    String                   @db.VarChar(100)
  zipcode                  String                   @db.VarChar(9)
  state                    String                   @db.VarChar(9)
  city                     String                   @db.VarChar(100)
  neighborhood             String                   @db.VarChar(100)
  latitude                 Decimal?                 @db.Decimal(10, 4)
  longitude                Decimal?                 @db.Decimal(10, 4)
  registrationNumber       String                   @map("register_number") @db.VarChar(400)
  birth_date               DateTime                 @db.Timestamptz(6)
  color                    String                   @db.VarChar(100)
  gender                   String                   @db.VarChar(100)
  modality                 String                   @db.VarChar(100)
  fields_of_work           String                   @db.VarChar(200)
  years_of_experience      String                   @db.VarChar(100)
  approach                 String?                  @db.VarChar(100)
  form_data_id             BigInt?
  occupation               String                   @db.VarChar(12)
  moodle_id                Int?
  form_entries_id          BigInt?
  zendeskUserId            BigInt?                  @map("zendesk_user_id")
  availability             Int
  offers_libras_support    Boolean
  street                   String?                  @db.VarChar(200)
  Matches                  Matches[]
  volunteer_availability   VolunteerAvailability?
  volunteer_status_history VolunteerStatusHistory[]
  volunteers_formdata      volunteers_formdata?     @relation(fields: [form_data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteers_volunteer_form_data_id_ec6c5a18_fk_volunteer")

  @@index([form_data_id], map: "volunteers_volunteer_form_data_id_ec6c5a18")
  @@map("volunteers")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model volunteers_formdata {
  id          BigInt       @id @default(autoincrement())
  type_form   String       @db.VarChar(10)
  step        Int
  values      Json
  user_id     Int          @unique
  created_at  DateTime     @db.Timestamptz(6)
  total_steps Int
  updated_at  DateTime     @db.Timestamptz(6)
  volunteers  Volunteers[]
  auth_user   auth_user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteers_formdata_user_id_c9262138_fk_auth_user_id")

  @@schema("public")
}

model SupportRequests {
  supportRequestId            Int                           @id @default(autoincrement()) @map("support_request_id")
  msrId                       BigInt                        @map("msr_id")
  zendeskTicketId             BigInt                        @unique @map("zendesk_ticket_id")
  supportType                 SupportType                   @map("support_type")
  supportExpertise            String?                       @map("support_expertise")
  priority                    Int?
  hasDisability               Boolean?                      @map("has_disability")
  requiresLibras              Boolean?                      @map("requires_libras")
  acceptsOnlineSupport        Boolean                       @map("accepts_online_support")
  lat                         Decimal?                      @db.Decimal(10, 4)
  lng                         Decimal?                      @db.Decimal(10, 4)
  city                        String?
  state                       String?
  status                      SupportRequestsStatus
  createdAt                   DateTime                      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt                   DateTime                      @updatedAt @map("updated_at") @db.Timestamp(6)
  Matches                     Matches[]
  SupportRequestStatusHistory SupportRequestStatusHistory[]

  @@map("support_requests")
  @@schema("match")
}

model SupportRequestStatusHistory {
  supportRequestStatusHistoryId Int                   @id @default(autoincrement()) @map("support_request_status_history_id")
  supportRequestId              Int                   @map("support_request_id")
  status                        SupportRequestsStatus
  createdAt                     DateTime              @default(now()) @map("created_at") @db.Timestamp(6)
  supportRequest                SupportRequests       @relation(fields: [supportRequestId], references: [supportRequestId])

  @@map("support_request_status_history")
  @@schema("match")
}

model Matches {
  matchId                  Int                  @id @default(autoincrement()) @map("match_id")
  supportRequestId         Int                  @map("support_request_id")
  msrId                    BigInt               @map("msr_id")
  volunteerId              Int?                 @map("volunteer_id")
  msrZendeskTicketId       BigInt               @map("msr_zendesk_ticket_id")
  volunteerZendeskTicketId BigInt?              @map("volunteer_zendesk_ticket_id")
  supportType              SupportType          @map("support_type")
  matchType                MatchType            @map("match_type")
  matchStage               MatchStage           @map("match_stage")
  status                   MatchStatus
  createdAt                DateTime             @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt                DateTime             @updatedAt @map("updated_at") @db.Timestamp(6)
  MatchStatusHistory       MatchStatusHistory[]
  MatchSurveys             MatchSurveys[]
  supportRequest           SupportRequests      @relation(fields: [supportRequestId], references: [supportRequestId])
  volunteer                Volunteers?          @relation(fields: [volunteerId], references: [id])

  @@map("matches")
  @@schema("match")
}

model MatchStatusHistory {
  matchStatusHistoryId Int         @id @default(autoincrement()) @map("match_status_history_id")
  matchId              Int         @map("match_id")
  status               MatchStatus
  createdAt            DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  match                Matches     @relation(fields: [matchId], references: [matchId])

  @@map("match_status_history")
  @@schema("match")
}

model MatchSurveys {
  matchSurveyId Int        @id @default(autoincrement()) @map("match_survey_id")
  matchId       Int        @map("match_id")
  createdAt     DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  surveyType    SurveyType @map("survey_type")
  match         Matches    @relation(fields: [matchId], references: [matchId])

  @@map("match_surveys")
  @@schema("match")
}

model Cities {
  city_id    Int      @id @default(autoincrement())
  city_value String   @db.VarChar(100)
  city_label String   @db.VarChar(100)
  state      String   @db.VarChar(2)
  ibge_code  Int
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
  msrs       msrs[]

  @@map("cities")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model VolunteerAvailability {
  volunteer_id          Int        @id
  current_matches       Int
  max_matches           Int
  is_available          Boolean
  support_type          String     @db.VarChar(20)
  support_expertise     String     @db.VarChar(200)
  offers_online_support Boolean
  lat                   Decimal?   @db.Decimal(10, 4)
  lng                   Decimal?   @db.Decimal(10, 4)
  city                  String     @db.VarChar(100)
  created_at            DateTime   @db.Timestamptz(6)
  updated_at            DateTime   @db.Timestamptz(6)
  state                 String     @db.VarChar(9)
  offers_libras_support Boolean
  volunteers            Volunteers @relation(fields: [volunteer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteer_availability_volunteer_id_ff544bbb_fk_volunteers_id")

  @@map("volunteer_availability")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model VolunteerStatusHistory {
  id           BigInt     @id @default(autoincrement())
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  volunteer_id Int
  status       String     @db.VarChar(30)
  volunteers   Volunteers @relation(fields: [volunteer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteer_status_history_volunteer_id_d1e0ea8c_fk_volunteers_id")

  @@index([volunteer_id], map: "volunteer_status_history_volunteer_id_d1e0ea8c")
  @@map("volunteer_status_history")
  @@schema("public")
}

model FeatureFlag {
  id             BigInt  @id @default(autoincrement())
  featureEnabled Boolean @default(false) @map("feature_enabled")
  featureName    String  @unique @map("feature_name")

  @@map("feature_flag")
  @@schema("match")
}

model BusaraHashes {
  msrEmail String @id @map("msr_email") @db.VarChar(254)
  hash     String @db.VarChar(1000)

  @@map("busara_hashes")
  @@schema("match")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model msrs {
  id                   BigInt   @id(map: "msrs_msrs_pkey") @default(autoincrement())
  user_zendesk_id      Int?
  name                 String   @db.VarChar(100)
  email                String   @db.VarChar(254)
  cpf                  String   @db.VarChar(11)
  color                String   @db.VarChar(15)
  gender               String   @db.VarChar(15)
  whatsapp             String   @db.VarChar(11)
  state                String   @db.VarChar(2)
  city_id              Int
  neighborhood         String   @db.VarChar(100)
  latitude             Decimal  @db.Decimal(10, 4)
  logintude            Decimal  @db.Decimal(10, 4)
  pcd                  Boolean
  education            String   @db.VarChar(40)
  work_situation       String   @db.VarChar(40)
  income               Decimal  @db.Decimal(10, 2)
  duration_of_violence String   @db.VarChar(30)
  author_of_violence   String   @db.VarChar(30)
  story                String
  risk_factors         String   @db.VarChar(140)
  protective_factors   String   @db.VarChar(100)
  public_service       String   @db.VarChar(100)
  type_of_support      String   @db.VarChar(20)
  access               String   @db.VarChar(30)
  status               String   @db.VarChar(15)
  support_on_queue     Boolean
  on_queue             Boolean
  online               Boolean
  priority             String   @db.VarChar(15)
  created_at           DateTime @db.Timestamptz(6)
  updated_at           DateTime @db.Timestamptz(6)
  match                Boolean
  digital_violence     String   @db.VarChar(200)
  obstetric_violence   String   @db.VarChar(100)
  physical_violence    String   @db.VarChar(100)
  property_violence    String   @db.VarChar(100)
  psych_violence       String   @db.VarChar(100)
  sexual_violence      String   @db.VarChar(100)
  cities               Cities   @relation(fields: [city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "msrs_msrs_city_id_e49bad88_fk_cities_city_id")

  @@index([city_id], map: "msrs_msrs_city_id_e49bad88")
  @@schema("public")
}

model Mutipliers {
  multiplierId                        Int                                  @id @default(autoincrement()) @map("multiplier_id")
  gender                              Gender
  age                                 Int
  region                              Region
  state                               String                               @db.VarChar(9)
  race                                Race
  sexuality                           Sexuality
  religion                            Religion
  hasDisability                       Boolean                              @map("has_disability")
  hasInternetAccess                   Boolean                              @map("has_internet_access")
  isAvailable                         Boolean                              @map("is_available")
  shiftAvailability                   String[]                             @map("shift_availability")
  educationLevel                      EducationLevel                       @map("education_level")
  isUniversityStudent                 Boolean                              @map("is_university_student")
  universityType                      MultiplierUniversityType             @map("university_type")
  createdAt                           DateTime                             @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt                           DateTime                             @updatedAt @map("updated_at") @db.Timestamp(6)
  multiplierPii                       MutiplierPii?
  multiplierRegistrationOpenQuestions MultiplierRegistrationOpenQuestions?

  @@map("multipliers")
  @@schema("mobilization")
}

model MutiplierPii {
  multiplierPiiId Int        @id @default(autoincrement()) @map("multiplier_pii_id")
  multiplierId    Int        @unique @map("multiplier_id")
  email           String     @db.VarChar(254)
  firstName       String     @map("first_name") @db.VarChar(200)
  lastName        String     @map("last_name") @db.VarChar(400)
  phone           String     @db.VarChar(100)
  zip_code        String     @db.VarChar(9)
  createdAt       DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  multupliers     Mutipliers @relation(fields: [multiplierId], references: [multiplierId])

  @@map("multiplier_pii")
  @@schema("mobilization")
}

model MultiplierRegistrationOpenQuestions {
  multiplier_registration_open_questions_id Int        @id @default(autoincrement()) @map("multiplier_registration_open_questions_id")
  multiplierId                              Int        @unique @map("multiplier_id")
  universityName                            String     @map("university_name") @db.VarChar(200)
  universityCourse                          String     @map("university_course") @db.VarChar(200)
  howSheHeardAboutUs                        String     @map("how_she_heard_about_us") @db.Text
  reasonsForParticipating                   String     @map("reasons_for_participating") @db.Text
  multupliers                               Mutipliers @relation(fields: [multiplierId], references: [multiplierId])

  @@map("multiplier_registration_open_questions")
  @@schema("mobilization")
}

enum SupportType {
  psychological
  legal

  @@map("support_type")
  @@schema("match")
}

enum SupportRequestsStatus {
  open
  matched
  social_worker
  public_service
  public_service_with_social_worker
  duplicated
  closed
  special_case

  @@map("support_requests_status")
  @@schema("match")
}

enum MatchType {
  msr
  volunteer
  manual
  old

  @@map("match_type")
  @@schema("match")
}

enum MatchStage {
  ideal
  expanded
  online
  old
  manual

  @@map("match_stage")
  @@schema("match")
}

enum MatchStatus {
  completed
  expired
  in_contact
  interrupted_after_support
  interrupted_before_support
  waiting_contact

  @@map("match_status")
  @@schema("match")
}

enum SurveyType {
  triagem_1
  triagem_2
  acompanhamento_1
  acompanhamento_2

  @@map("survey_type")
  @@schema("match")
}

enum Gender {
  cis_woman
  trans_woman
  not_found

  @@map("gender")
  @@schema("public")
}

enum Region {
  norte
  nordeste
  centro_oeste
  sudeste
  sul
  not_found

  @@map("region")
  @@schema("public")
}

enum Race {
  black
  brown
  indigenous
  yellow
  white
  not_found

  @@map("race")
  @@schema("public")
}

enum Sexuality {
  lesbian
  bisexual
  heterosexual
  asexual
  not_found

  @@map("sexuality")
  @@schema("public")
}

enum Religion {
  atheist
  candomble
  catholic
  spiritist
  evangelical
  umbanda
  others
  not_found

  @@map("religion")
  @@schema("public")
}

enum EducationLevel {
  basic_education
  high_school
  completed_undergraduate
  incomplete_undergraduate
  not_found

  @@map("education_level")
  @@schema("public")
}

enum MultiplierUniversityType {
  public
  private
  not_found

  @@map("multiplier_university_type")
  @@schema("mobilization")
}
